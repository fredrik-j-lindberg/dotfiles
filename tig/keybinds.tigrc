# Yank commit hash (for some reason the regular tr -d '\n' piping did not work so had to use printf workaround)
bind generic Y @sh -c "git rev-parse --short %(commit) | xargs printf | pbcopy"
bind generic y @sh -c "git rev-parse --short %(commit) | xargs printf | pbcopy"
# Enter commit diff with l
bind generic l enter
# Toggle commit title refs ([master] {origin/master} etc)
bind generic r :toggle commit-title-refs

bind refs 1 <git checkout %(branch)

# Interactive rebase from selected commit
bind generic 1 <git rebase -i %(commit)~1
bind generic 2 ?<git rebase -i --exec "npm run test" %(commit)~1

# Commit staged changes (and unbind ctrl+C as quit)
bind generic <Ctrl-C> none
bind generic <Ctrl-c> @git commit

# Reference:
#   !	Run the command in the foreground with output shown.
#   @	Run the command in the background with no output.
#   ?	Prompt the user before executing the command.
#   +	Run the command synchronously, and echo the first line of output to the status bar.
#   <	Exit Tig after executing the command.
#   >	Re-open Tig instantly in the last displayed view after executing the command.